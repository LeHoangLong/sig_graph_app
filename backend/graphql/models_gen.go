// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graphql

import (
	"fmt"
	"io"
	"strconv"
	"time"
)

type Material struct {
	ID                     int       `json:"Id"`
	NodeID                 string    `json:"NodeId"`
	Name                   string    `json:"Name"`
	Unit                   string    `json:"Unit"`
	Quantity               string    `json:"Quantity"`
	CreatedTime            time.Time `json:"CreatedTime"`
	OwnerPublicKey         string    `json:"OwnerPublicKey"`
	PreviousNodesHashedIds []*string `json:"PreviousNodesHashedIds"`
	NextNodesHashedIds     []*string `json:"NextNodesHashedIds"`
}

type MaterialGraph struct {
	MainMaterial     *Material   `json:"MainMaterial"`
	RelatedMaterials []*Material `json:"RelatedMaterials"`
}

type Peer struct {
	ID         int          `json:"Id"`
	Alias      string       `json:"Alias"`
	PublicKeys []*PublicKey `json:"PublicKeys"`
}

type PublicKey struct {
	ID    int    `json:"Id"`
	Value string `json:"Value"`
}

type ReceiveMaterialRequestRequest struct {
	ID                int                                 `json:"Id"`
	TransferMaterial  *Material                           `json:"TransferMaterial"`
	ExposedMaterials  []*Material                         `json:"ExposedMaterials"`
	TransferTime      time.Time                           `json:"TransferTime"`
	SenderPublicKeyID int                                 `json:"SenderPublicKeyId"`
	Status            ReceiveMaterialRequestRequestStatus `json:"Status"`
}

type ReceiveMaterialRequestResponse struct {
	Accepted bool                           `json:"Accepted"`
	Request  *ReceiveMaterialRequestRequest `json:"Request"`
}

type ReceiveMaterialRequestRequestStatus string

const (
	ReceiveMaterialRequestRequestStatusPending  ReceiveMaterialRequestRequestStatus = "PENDING"
	ReceiveMaterialRequestRequestStatusAccepted ReceiveMaterialRequestRequestStatus = "ACCEPTED"
	ReceiveMaterialRequestRequestStatusRejected ReceiveMaterialRequestRequestStatus = "REJECTED"
)

var AllReceiveMaterialRequestRequestStatus = []ReceiveMaterialRequestRequestStatus{
	ReceiveMaterialRequestRequestStatusPending,
	ReceiveMaterialRequestRequestStatusAccepted,
	ReceiveMaterialRequestRequestStatusRejected,
}

func (e ReceiveMaterialRequestRequestStatus) IsValid() bool {
	switch e {
	case ReceiveMaterialRequestRequestStatusPending, ReceiveMaterialRequestRequestStatusAccepted, ReceiveMaterialRequestRequestStatusRejected:
		return true
	}
	return false
}

func (e ReceiveMaterialRequestRequestStatus) String() string {
	return string(e)
}

func (e *ReceiveMaterialRequestRequestStatus) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = ReceiveMaterialRequestRequestStatus(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid ReceiveMaterialRequestRequestStatus", str)
	}
	return nil
}

func (e ReceiveMaterialRequestRequestStatus) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
