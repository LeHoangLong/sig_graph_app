scalar Time

type Material {
  Id: Int!,
  NodeId: String!,
  Name: String!,
  Unit: String!,
  Quantity: String!,
  CreatedTime: Time!,
  OwnerPublicKey: String!,
  PreviousNodesHashedIds: [String]!,
  NextNodesHashedIds: [String]!,
}

type PublicKey {
  Id: Int!,
  Value: String!,  
}

type Peer {
  Id: Int!,
  Alias: String!,
  PublicKeys: [PublicKey!]!,
}

type MaterialGraph {
  MainMaterial: Material!,
  RelatedMaterials: [Material]!,
}

enum ReceiveMaterialRequestRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

type ReceiveMaterialRequestRequest {
  Id: Int!,
  TransferMaterial: Material!,
  ExposedMaterials: [Material]!,
  TransferTime: Time!,
  SenderPublicKeyId: Int!,
  Status: ReceiveMaterialRequestRequestStatus!,
}

type ReceiveMaterialRequestResponse {
  Accepted: Boolean!,
  Request: ReceiveMaterialRequestRequest!,
}

type Mutation {
  createMaterial(
    name: String!, 
    unit: String!, 
    quantity: String!,
  ): Material
  transferMaterial(
    materialId: Int!, 
    peerPublicKeyId: Int!,
    relatedMaterialsId: [Int!]!,
  ) : ReceiveMaterialRequestResponse
}

type Query {
  materialByNodeId(nodeId: String!): Material
  materials: [Material!]!
  peers: [Peer!]!
  receivedTransferMaterialRequests(status: [ReceiveMaterialRequestRequestStatus]!): [ReceiveMaterialRequestRequest]!
  acceptPendingReceivedTransferMaterialRequests(requestId: Int!, accept: Boolean!): Boolean
}